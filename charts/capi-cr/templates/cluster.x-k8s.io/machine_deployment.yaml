{{- $root := . -}}
{{- $cluster := .Values.cluster }}
{{- range $name, $md := .Values.cluster.workers }}
{{- $mt := "" }}
{{- if or $md.enabled (not (hasKey $md "enabled")) }}
{{- if eq "hetzner" (lower $.Values.cluster.infrastructureRef) }}
{{- $mt = pluck $name $.Values.hetzner.hcloud.workers | first  }}
{{- end }}
{{- if not (empty $mt) }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ include "common.fullname" $root }}-{{ $name }}
  namespace: {{ $.Release.Namespace }}
  {{- include "common.annotations.boilerplate" (list $md ) | nindent 2 }}
  {{- include "common.labels.boilerplate" (list $root $md ) | nindent 2 }}
    nodepool: {{ include "common.fullname" $root }}-{{ $name }}
spec:
  clusterName: {{ include "common.fullname" $root | quote }}
  paused: {{ $md.paused | default false }}
  replicas: {{ $md.replicas | default 1 }}
  progressDeadlineSeconds: {{ $md.progressDeadlineSeconds | default 600}}
  revisionHistoryLimit: {{ $md.revisionHistoryLimit | default 1 }}
  {{- if hasKey $md "strategy" }}
  {{- if not (empty $md.strategy ) }}
  strategy:
  {{- if hasKey $md.strategy "rollingUpdate" }}
    rollingUpdate:
      deletePolicy: {{ $md.strategy.rollingUpdate.deletePolicy | default "oldest" }}
      maxSurge: {{ $md.strategy.rollingUpdate.maxSurge | default 1 }}
      maxUnavailable: {{ $md.strategy.rollingUpdate.maxUnavailable | default 0 }}
  {{- end }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: {{ include "common.fullname" $root | quote }}
      failureDomain: {{ required (printf "Please specify a failureDomain for cluster.workers.%s" $name) $md.failureDomain }}
      version: {{ required (printf "You need to specify a Kubernetes version like v1.x.x on cluster.workers.%s - please check that the related machineTemplate and node image support the corresponding Kubernetes version" $name) $md.version }}
      bootstrap:
        configRef:
          {{- include "kubeadm.kubeadmConfigTemplate" (dict "root" $root "cluster" $cluster "name" $name) | nindent 10 }}
      infrastructureRef:
        {{- include "infrastructureRef.machineTemplate" (dict "root" $root "cluster" $cluster "name" $name ) | nindent 8 }}
{{- end }}
{{- end }}
{{- else -}}
{{ required (printf "Please specify a MachineTemplate for %s" $name) nil }}
{{- end }}